# vim: ft=yaml
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  GitHubUser:
    Type: String
    Default: 'dmotles'
  GitHubRepo:
    Type: String
    Default: 'ebcf-alexa'
  GitHubBranch:
    Type: String
    Default: 'master'
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  EnvName:
    Type: String
    Default: test

Resources:
  CODEPIPELINE:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
          Location: !Ref ArtifactBucket
          Type: S3
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                  - Name: github-src
              Name: GitHub
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildEBCFAlexa
              InputArtifacts:
                  - Name: github-src
              OutputArtifacts:
                  - Name: ebcf-alexa
              Name: Build

  CodeBuildEBCFAlexa:
    Type: 'AWS::CodeBuild::Project'
    Properties:
        Artifacts:
            Type: CODEPIPELINE
        Description: 'Codebuild for ebcf-alexa'
        Name: !Sub '${EnvName}-build-ebcf-alexa'
        ServiceRole: !GetAtt [CodeBuilderRole, Arn]
        Source:
            Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            Image: !Sub '${AWS::AccountId}.dkr.ecr.us-east-1.amazonaws.com/ebcf-alexa:latest'
            ComputeType: BUILD_GENERAL1_SMALL

  ArtifactBucket:
    Type: 'AWS::S3::Bucket'

##
# IAM ROLES
##

  CodeBuilderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: 2012-10-17
      Path: /ebcf-alexa/
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-east-1-*/*'
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${EnvName}-build-ebcf-alexa'
                  - !Sub 'arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${EnvName}-build-ebcf-alexa:*'
              - Action:
                  - 'cloudformation:ValidateTemplate'
                Effect: Allow
                Resource: '*'

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: 2012-10-17
      Path: /ebcf-alexa/
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'iam:PassRole'
                  - 'sns:Publish'
                Effect: Allow
                Resource: '*'
              - Action:  # For CodeBuild actions
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource: '*'
