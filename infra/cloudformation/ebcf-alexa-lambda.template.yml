# vim: ft=yaml
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This is used to deploy/update the lambda function. It's called by the code pipeline.
Parameters:
    LambdaS3Bucket:
        Type: String
        MinLength: 3
        MaxLength: 63
        AllowedPattern: '(\p{Alnum}[\p{Alnum}-]*\.)*(\p{Alnum}[\p{Alnum}-]*)$'
        Description: S3 bucket where the function code lives
        ConstraintDescription: >
          S3 bucket names have alphanumeric characters, dashes, and dots
          according to s3 docs.
    LambdaS3Key:
        Type: String
        MinLength: 1
        MaxLength: 1024
        Description: Where in the s3 bucket the lambda function is located
        ConstraintDescription: Max key length is 1024 chars according to s3 docs.
    LambdaFunctionName:
        Type: String
        MinLength: 1
        MaxLength: 140
        AllowedPattern: >
          (arn:aws:lambda:)?
          ([a-z]{2}-[a-z]+-\d{1}:)?
          (\d{12}:)?
          (function:)?
          ([a-zA-Z0-9-_]+)
          (:(\$LATEST|[a-zA-Z0-9-_]+))?
        ConstraintDescription: >
          Documented AWS Lambda function name restrictions.

Resources:
    LAMBDA:
        Type: 'AWS::Lambda::Function'
        Properties:
            FunctionName: !Ref LambdaFunctionName
            Code:
                S3Bucket: !Ref LambdaS3Bucket
                S3Key: !Ref LambdaS3Key
            Role: !GetAtt [ExecutionRole, Arn]
            Handler: ebcf_alexa.lambda_handler
            Description: 'Elliott Bay Crossfit Alexa Skill'
            MemorySize: 128 #MB
            Timeout: 60 # secs
            Runtime: 'python3.6'

    AlexaInvokePermission:
      Type: 'AWS::Lambda::Permission'
      Properties:
        Action: 'lambda:InvokeFunction'
        Principal: 'alexa-appkit.amazon.com'
        FunctionName: !GetAtt [LAMBDA, Arn]

    ExecutionRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: 'lambda.amazonaws.com'
                      Action: 'sts:AssumeRole'
            Path: /
            Policies:
              - PolicyName: logging
                PolicyDocument:
                  Version: 2012-10-17
                  Statement:
                    - Effect: Allow
                      Action:
                        - 'logs:CreateLogGroup'
                        - 'logs:CreateLogStream'
                        - 'logs:PutLogEvents'
                      Resource: '*'
